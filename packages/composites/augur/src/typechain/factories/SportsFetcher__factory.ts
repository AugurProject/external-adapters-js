/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";

import type { SportsFetcher } from "../SportsFetcher";

export class SportsFetcher__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<SportsFetcher> {
    return super.deploy(overrides || {}) as Promise<SportsFetcher>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): SportsFetcher {
    return super.attach(address) as SportsFetcher;
  }
  connect(signer: Signer): SportsFetcher__factory {
    return super.connect(signer) as SportsFetcher__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SportsFetcher {
    return new Contract(address, _abi, signerOrProvider) as SportsFetcher;
  }
}

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_marketFactory",
        type: "address",
      },
      {
        internalType: "contract AMMFactory",
        name: "_ammFactory",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_offset",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_total",
        type: "uint256",
      },
    ],
    name: "fetchDynamic",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "enum Sport.SportsEventStatus",
            name: "status",
            type: "uint8",
          },
          {
            components: [
              {
                internalType: "contract AbstractMarketFactoryV3",
                name: "factory",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "marketId",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address",
                    name: "addr",
                    type: "address",
                  },
                  {
                    internalType: "uint256[]",
                    name: "tokenRatios",
                    type: "uint256[]",
                  },
                  {
                    internalType: "uint256[]",
                    name: "balances",
                    type: "uint256[]",
                  },
                  {
                    internalType: "uint256[]",
                    name: "weights",
                    type: "uint256[]",
                  },
                  {
                    internalType: "uint256",
                    name: "swapFee",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "totalSupply",
                    type: "uint256",
                  },
                ],
                internalType: "struct Fetcher.PoolBundle",
                name: "pool",
                type: "tuple",
              },
              {
                internalType: "contract OwnedERC20",
                name: "winner",
                type: "address",
              },
            ],
            internalType: "struct Fetcher.DynamicMarketBundle[]",
            name: "markets",
            type: "tuple[]",
          },
          {
            internalType: "uint256",
            name: "homeScore",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "awayScore",
            type: "uint256",
          },
        ],
        internalType: "struct SportsFetcher.DynamicEventBundle[]",
        name: "_bundles",
        type: "tuple[]",
      },
      {
        internalType: "uint256",
        name: "_lowestEventIndex",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_timestamp",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_marketFactory",
        type: "address",
      },
      {
        internalType: "contract AMMFactory",
        name: "_ammFactory",
        type: "address",
      },
      {
        internalType: "contract MasterChef",
        name: "_masterChef",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_offset",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_total",
        type: "uint256",
      },
    ],
    name: "fetchInitial",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "shareFactor",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "stakerFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "settlementFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "protocolFee",
                type: "uint256",
              },
              {
                internalType: "contract FeePot",
                name: "feePot",
                type: "address",
              },
              {
                components: [
                  {
                    internalType: "address",
                    name: "addr",
                    type: "address",
                  },
                  {
                    internalType: "string",
                    name: "symbol",
                    type: "string",
                  },
                  {
                    internalType: "uint256",
                    name: "decimals",
                    type: "uint256",
                  },
                ],
                internalType: "struct Fetcher.CollateralBundle",
                name: "collateral",
                type: "tuple",
              },
              {
                internalType: "uint256",
                name: "marketCount",
                type: "uint256",
              },
            ],
            internalType: "struct Fetcher.MarketFactoryBundle",
            name: "super",
            type: "tuple",
          },
        ],
        internalType: "struct SportsFetcher.SpecificMarketFactoryBundle",
        name: "_marketFactoryBundle",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "contract AbstractMarketFactoryV3",
                name: "factory",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "marketId",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address",
                    name: "addr",
                    type: "address",
                  },
                  {
                    internalType: "uint256[]",
                    name: "tokenRatios",
                    type: "uint256[]",
                  },
                  {
                    internalType: "uint256[]",
                    name: "balances",
                    type: "uint256[]",
                  },
                  {
                    internalType: "uint256[]",
                    name: "weights",
                    type: "uint256[]",
                  },
                  {
                    internalType: "uint256",
                    name: "swapFee",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "totalSupply",
                    type: "uint256",
                  },
                ],
                internalType: "struct Fetcher.PoolBundle",
                name: "pool",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "uint256",
                    name: "beginTimestamp",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "endTimestamp",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "earlyDepositEndTimestamp",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "totalRewardsAccrued",
                    type: "uint256",
                  },
                  {
                    internalType: "bool",
                    name: "created",
                    type: "bool",
                  },
                ],
                internalType: "struct MasterChef.PoolStatusInfo",
                name: "rewards",
                type: "tuple",
              },
              {
                internalType: "contract OwnedERC20[]",
                name: "shareTokens",
                type: "address[]",
              },
              {
                internalType: "uint256",
                name: "creationTimestamp",
                type: "uint256",
              },
              {
                internalType: "contract OwnedERC20",
                name: "winner",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "initialOdds",
                type: "uint256[]",
              },
            ],
            internalType: "struct Fetcher.StaticMarketBundle[]",
            name: "markets",
            type: "tuple[]",
          },
          {
            internalType: "int256[]",
            name: "lines",
            type: "int256[]",
          },
          {
            internalType: "uint256",
            name: "estimatedStartTime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "homeTeamId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "awayTeamId",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "homeTeamName",
            type: "string",
          },
          {
            internalType: "string",
            name: "awayTeamName",
            type: "string",
          },
          {
            internalType: "enum Sport.SportsEventStatus",
            name: "status",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "homeScore",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "awayScore",
            type: "uint256",
          },
        ],
        internalType: "struct SportsFetcher.StaticEventBundle[]",
        name: "_eventBundles",
        type: "tuple[]",
      },
      {
        internalType: "uint256",
        name: "_lowestEventIndex",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_timestamp",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_marketFactory",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_offset",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_total",
        type: "uint256",
      },
    ],
    name: "listResolvableEvents",
    outputs: [
      {
        internalType: "uint256[]",
        name: "_resolvableEvents",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "_eventIndex",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "marketType",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "version",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604080518082018252600681526553706f72747360d01b6020808301918252835180850190945260038452620c4b8d60ea1b9084015281519192916200005b916000916200007a565b508051620000719060019060208401906200007a565b50505062000126565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282620000b25760008555620000fd565b82601f10620000cd57805160ff1916838001178555620000fd565b82800160010185558215620000fd579182015b82811115620000fd578251825591602001919060010190620000e0565b506200010b9291506200010f565b5090565b5b808211156200010b576000815560010162000110565b6125b380620001366000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c806322254b881461005c5780632dd489091461008857806354fd4d501461009d57806356d27491146100a55780638a02d226146100c7575b600080fd5b61006f61006a366004611bc5565b6100e8565b60405161007f949392919061242d565b60405180910390f35b610090610121565b60405161007f919061241a565b6100906101af565b6100b86100b3366004611c1f565b610209565b60405161007f93929190612299565b6100da6100d5366004611c64565b61022a565b60405161007f9291906123bb565b6100f061174b565b60606000806100fe89610466565b935061010d898989898961047e565b949a90995093975042965092945050505050565b6000805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156101a75780601f1061017c576101008083540402835291602001916101a7565b820191906000526020600020905b81548152906001019060200180831161018a57829003601f168201915b505050505081565b60018054604080516020600284861615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156101a75780601f1061017c576101008083540402835291602001916101a7565b606060008061021a8787878761053f565b9098909750429650945050505050565b60606000826001600160401b038111801561024457600080fd5b5060405190808252806020026020018201604052801561026e578160200160208202803683370190505b5091506000856001600160a01b03166371be2e4a6040518163ffffffff1660e01b815260040160206040518083038186803b1580156102ac57600080fd5b505afa1580156102c0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102e49190611f1d565b905080610326576000805b50604051908082528060200260200182016040528015610319578160200160208202803683370190505b506000925092505061045e565b808086111561036b576000805b5060405190808252806020026020018201604052801561035d578160200160208202803683370190505b50600093509350505061045e565b600086820393505b85811061037f5761044e565b836103895761044e565b604051637ab1e4cd60e11b81526000199094019360009081906001600160a01b038b169063f563c99a906103c19089906004016124ec565b60006040518083038186803b1580156103d957600080fd5b505afa1580156103ed573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526104159190810190611ed9565b91509150610423828b6105fe565b15610447578087848151811061043557fe5b60209081029190910101526001909201915b5050610373565b8086111561045a578085525b5050505b935093915050565b61046e61174b565b610477826106d8565b8152919050565b60606000606061048f888686610a52565b8151955092509050836001600160401b03811180156104ad57600080fd5b506040519080825280602002602001820160405280156104e757816020015b6104d4611763565b8152602001906001900390816104cc5790505b50925060005b848110156105335761051489898985858151811061050757fe5b6020026020010151610c0f565b84828151811061052057fe5b60209081029190910101526001016104ed565b50509550959350505050565b606060006060610550878686610a52565b8151955092509050836001600160401b038111801561056e57600080fd5b506040519080825280602002602001820160405280156105a857816020015b6105956117c8565b81526020019060019003908161058d5790505b50925060005b848110156105f3576105d488888484815181106105c757fe5b6020026020010151610dcc565b8482815181106105e057fe5b60209081029190910101526001016105ae565b505094509492505050565b600080805b8460200151518110156106ce5760008560200151828151811061062257fe5b60200260200101519050806000141580156106b657506040516353ac55f560e01b81526001600160a01b038616906353ac55f5906106649084906004016124ec565b60206040518083038186803b15801561067c57600080fd5b505afa158015610690573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106b49190611cca565b155b156106c55760019250506106ce565b50600101610603565b5090505b92915050565b6106e06117f8565b816001600160a01b0316637641ab016040518163ffffffff1660e01b815260040160206040518083038186803b15801561071957600080fd5b505afa15801561072d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107519190611f1d565b816000018181525050816001600160a01b0316634b2d9ffc6040518163ffffffff1660e01b815260040160206040518083038186803b15801561079357600080fd5b505afa1580156107a7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107cb9190611f1d565b816020018181525050816001600160a01b0316637d1d7fb86040518163ffffffff1660e01b815260040160206040518083038186803b15801561080d57600080fd5b505afa158015610821573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108459190611f1d565b816040018181525050816001600160a01b031663b0e21e8a6040518163ffffffff1660e01b815260040160206040518083038186803b15801561088757600080fd5b505afa15801561089b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108bf9190611f1d565b816060018181525050816001600160a01b0316634c9f66c76040518163ffffffff1660e01b815260040160206040518083038186803b15801561090157600080fd5b505afa158015610915573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109399190611ce4565b81608001906001600160a01b031690816001600160a01b0316815250506109cf826001600160a01b031663d8dfeb456040518163ffffffff1660e01b815260040160206040518083038186803b15801561099257600080fd5b505afa1580156109a6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109ca9190611ce4565b610f4a565b8160a00181905250816001600160a01b031663ec9790826040518163ffffffff1660e01b815260040160206040518083038186803b158015610a1057600080fd5b505afa158015610a24573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a489190611f1d565b60c0820152919050565b60606000826001600160401b0381118015610a6c57600080fd5b50604051908082528060200260200182016040528015610a96578160200160208202803683370190505b5091506000856001600160a01b03166371be2e4a6040518163ffffffff1660e01b815260040160206040518083038186803b158015610ad457600080fd5b505afa158015610ae8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b0c9190611f1d565b905080610b1b576000806102ef565b8080861115610b2c57600080610333565b600086820393505b858110610b405761044e565b83610b4a5761044e565b604051637ab1e4cd60e11b81526000199094019360009081906001600160a01b038b169063f563c99a90610b829089906004016124ec565b60006040518083038186803b158015610b9a57600080fd5b505afa158015610bae573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610bd69190810190611ed9565b91509150610be4828b611057565b15610c085780878481518110610bf657fe5b60209081029190910101526001909201915b5050610b34565b610c17611763565b604051630ce3d6d360e31b81526000906001600160a01b0387169063671eb69890610c469086906004016124ec565b60006040518083038186803b158015610c5e57600080fd5b505afa158015610c72573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610c9a9190810190611ea7565b905060008160200151516001600160401b0381118015610cb957600080fd5b50604051908082528060200260200182016040528015610cf357816020015b610ce0611844565b815260200190600190039081610cd85790505b50905060005b8151811015610d4457610d2588888886602001518581518110610d1857fe5b60200260200101516110b1565b828281518110610d3157fe5b6020908102919091010152600101610cf9565b5083835281516101008401906004811115610d5b57fe5b90816004811115610d6857fe5b905250602083015260408082015190830152606080820151908301526080808201519083015260a0808201519083015260c0808201519083015260e08082015190830152610100810151610120808401919091520151610140820152949350505050565b610dd46117c8565b604051630ce3d6d360e31b81526000906001600160a01b0386169063671eb69890610e039086906004016124ec565b60006040518083038186803b158015610e1b57600080fd5b505afa158015610e2f573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610e579190810190611ea7565b905060008160200151516001600160401b0381118015610e7657600080fd5b50604051908082528060200260200182016040528015610eb057816020015b610e9d61189c565b815260200190600190039081610e955790505b50905060005b8151811015610f0057610ee1878785602001518481518110610ed457fe5b6020026020010151611223565b828281518110610eed57fe5b6020908102919091010152600101610eb6565b5083835260408301819052815160208401906004811115610f1d57fe5b90816004811115610f2a57fe5b905250506101008101516060830152610120015160808201529392505050565b610f526118c8565b6001600160a01b038216808252604080516395d89b4160e01b815290516395d89b4191600480820192600092909190829003018186803b158015610f9557600080fd5b505afa158015610fa9573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610fd19190810190611d00565b8160200181905250816001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b15801561101257600080fd5b505afa158015611026573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061104a9190611f35565b60ff166040820152919050565b6000805b8360200151518110156110a75760008460200151828151811061107a57fe5b6020026020010151905061108e84826112e7565b1561109e576001925050506106d2565b5060010161105b565b5060009392505050565b6110b9611844565b60405163eb44fdd360e01b81526000906001600160a01b0387169063eb44fdd3906110e89086906004016124ec565b60006040518083038186803b15801561110057600080fd5b505afa158015611114573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261113c9190810190611d32565b6001600160a01b038716835260208301849052905061115c868685611409565b604080840191909152516327def0cb60e21b81526001600160a01b03851690639f7bc32c906111939088908a9088906004016123dd565b60a06040518083038186803b1580156111ab57600080fd5b505afa1580156111bf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111e39190611e3b565b60608301526020810151608083015260e08082015160a084015260408201516001600160a01b031660c08401526101209091015190820152949350505050565b61122b61189c565b60405163eb44fdd360e01b81526000906001600160a01b0386169063eb44fdd39061125a9086906004016124ec565b60006040518083038186803b15801561127257600080fd5b505afa158015611286573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526112ae9190810190611d32565b6001600160a01b03808716845260208401859052604082015116606084015290506112da858585611409565b6040830152509392505050565b600080836001600160a01b031663eb44fdd3846040518263ffffffff1660e01b815260040161131691906124ec565b60006040518083038186803b15801561132e57600080fd5b505afa158015611342573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261136a9190810190611d32565b60408101519091506001600160a01b03166113895760019150506106d2565b600081604001516001600160a01b03166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b1580156113c857600080fd5b505afa1580156113dc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114009190611f1d565b11949350505050565b6114116118f2565b604051632dadcf5160e11b81526000906001600160a01b03851690635b5b9ea2906114429088908790600401612401565b60206040518083038186803b15801561145a57600080fd5b505afa15801561146e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114929190611ce4565b90506001600160a01b0381166114a85750611744565b6001600160a01b038116808352604080516318160ddd60e01b815290516318160ddd91600480820192602092909190829003018186803b1580156114eb57600080fd5b505afa1580156114ff573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115239190611f1d565b60a083015260405163fa0de35960e01b81526001600160a01b0385169063fa0de359906115569088908790600401612401565b60206040518083038186803b15801561156e57600080fd5b505afa158015611582573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115a69190611f1d565b608083015260405163d2364bf360e01b81526001600160a01b0385169063d2364bf3906115d99088908790600401612401565b60006040518083038186803b1580156115f157600080fd5b505afa158015611605573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261162d9190810190611c98565b6040808401919091525163c7b4b6dd60e01b81526001600160a01b0385169063c7b4b6dd906116629088908790600401612401565b60006040518083038186803b15801561167a57600080fd5b505afa15801561168e573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526116b69190810190611c98565b602083015260405163d055da7160e01b81526001600160a01b0385169063d055da71906116e99088908790600401612401565b60006040518083038186803b15801561170157600080fd5b505afa158015611715573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261173d9190810190611c98565b6060830152505b9392505050565b604051806020016040528061175e6117f8565b905290565b6040518061016001604052806000815260200160608152602001606081526020016000815260200160008152602001600081526020016060815260200160608152602001600060048111156117b457fe5b815260200160008152602001600081525090565b6040805160a081019091526000808252602082019081526020016060815260200160008152602001600081525090565b6040518060e001604052806000815260200160008152602001600081526020016000815260200160006001600160a01b031681526020016118376118c8565b8152602001600081525090565b6040805161010081018252600080825260208201529081016118646118f2565b8152602001611871611931565b8152602001606081526020016000815260200160006001600160a01b03168152602001606081525090565b60408051608081018252600080825260208201529081016118bb6118f2565b8152600060209091015290565b604051806060016040528060006001600160a01b0316815260200160608152602001600081525090565b6040518060c0016040528060006001600160a01b0316815260200160608152602001606081526020016060815260200160008152602001600081525090565b6040518060a00160405280600081526020016000815260200160008152602001600081526020016000151581525090565b805161196d81612565565b919050565b600082601f830112611982578081fd5b8151602061199761199283612518565b6124f5565b82815281810190858301838502870184018810156119b3578586fd5b855b858110156119da5781516119c881612565565b845292840192908401906001016119b5565b5090979650505050505050565b600082601f8301126119f7578081fd5b81516020611a0761199283612518565b8281528181019085830183850287018401881015611a23578586fd5b855b858110156119da57815184529284019290840190600101611a25565b8051801515811461196d57600080fd5b80516005811061196d57600080fd5b600082601f830112611a70578081fd5b81516001600160401b03811115611a8357fe5b611a96601f8201601f19166020016124f5565b818152846020838601011115611aaa578283fd5b611abb826020830160208701612535565b949350505050565b6000610140808385031215611ad6578182fd5b611adf816124f5565b915050611aeb82611a51565b815260208201516001600160401b0380821115611b0757600080fd5b611b13858386016119e7565b60208401526040840151915080821115611b2c57600080fd5b611b38858386016119e7565b6040840152606084015160608401526080840151608084015260a084015160a084015260c0840151915080821115611b6f57600080fd5b611b7b85838601611a60565b60c084015260e0840151915080821115611b9457600080fd5b50611ba184828501611a60565b60e08301525061010080830151818301525061012080830151818301525092915050565b600080600080600060a08688031215611bdc578081fd5b8535611be781612565565b94506020860135611bf781612565565b93506040860135611c0781612565565b94979396509394606081013594506080013592915050565b60008060008060808587031215611c34578182fd5b8435611c3f81612565565b93506020850135611c4f81612565565b93969395505050506040820135916060013590565b600080600060608486031215611c78578081fd5b8335611c8381612565565b95602085013595506040909401359392505050565b600060208284031215611ca9578081fd5b81516001600160401b03811115611cbe578182fd5b611abb848285016119e7565b600060208284031215611cdb578081fd5b61174482611a41565b600060208284031215611cf5578081fd5b815161174481612565565b600060208284031215611d11578081fd5b81516001600160401b03811115611d26578182fd5b611abb84828501611a60565b600060208284031215611d43578081fd5b81516001600160401b0380821115611d59578283fd5b8184019150610160808387031215611d6f578384fd5b611d78816124f5565b9050611d8383611962565b8152602083015182811115611d96578485fd5b611da287828601611972565b602083015250611db460408401611962565b6040820152606083015160608201526080830151608082015260a083015160a082015260c083015160c082015260e083015160e08201526101008084015181830152506101208084015183811115611e0a578586fd5b611e16888287016119e7565b8284015250506101409150611e2c828401611a41565b91810191909152949350505050565b600060a08284031215611e4c578081fd5b60405160a081018181106001600160401b0382111715611e6857fe5b806040525082518152602083015160208201526040830151604082015260608301516060820152611e9b60808401611a41565b60808201529392505050565b600060208284031215611eb8578081fd5b81516001600160401b03811115611ecd578182fd5b611abb84828501611ac3565b60008060408385031215611eeb578182fd5b82516001600160401b03811115611f00578283fd5b611f0c85828601611ac3565b925050602083015190509250929050565b600060208284031215611f2e578081fd5b5051919050565b600060208284031215611f46578081fd5b815160ff81168114611744578182fd5b6000815180845260208085019450808401835b83811015611f8e5781516001600160a01b031687529582019590820190600101611f69565b509495945050505050565b6000815180845260208085019450808401835b83811015611f8e57815187529582019590820190600101611fac565b6000815180845260208085018081965082840281019150828601855b858110156120c057828403895281516101608151865286820151818888015261200f828801826120cd565b915050604080830151878303828901526120298382611f99565b925050506060808301518188015250608080830151818801525060a080830151818801525060c0808301518783038289015261206583826121c0565b9250505060e0808301518783038289015261208083826121c0565b9250505061010080830151612097828901826121b2565b505061012082810151908701526101409182015191909501529784019790840190600101611fe4565b5091979650505050505050565b6000815180845260208085018081965082840281019150828601855b858110156120c057828403895281516101806121068683516121a5565b86820151878701526040808301518282890152612125838901826121ec565b9250505060608083015161213b82890182612267565b505060808201518682036101008801526121558282611f56565b91505060a082015161012087015260c08201516121766101408801826121a5565b5060e082015191508581036101608701526121918183611f99565b9a87019a95505050908401906001016120e9565b6001600160a01b03169052565b600581106121bc57fe5b9052565b600081518084526121d8816020860160208601612535565b601f01601f19169290920160200192915050565b600060018060a01b038251168352602082015160c0602085015261221360c0850182611f99565b90506040830151848203604086015261222c8282611f99565b915050606083015184820360608601526122468282611f99565b9150506080830151608085015260a083015160a08501528091505092915050565b805182526020810151602083015260408101516040830152606081015160608301526080810151151560808301525050565b60006060820160608352808651808352608085019150602092506080838202860101838901855b838110156123a157607f19888403018552815160a0840181518552878201516122eb898701826121b2565b50604082015160a0604087015281815180845260c08801915060c08b820289010193508a830192508b5b818110156123785760bf19898603018352835160018060a01b038082511687528d8201518e88015260408201516080604089015261235660808901826121ec565b606093840151909216979092019690965250928b0192918b0191600101612315565b5050505060608281015190860152608091820151919094015293850193908501906001016122c0565b505092850196909652506040909201929092529392505050565b6000604082526123ce6040830185611f99565b90508260208301529392505050565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b03929092168252602082015260400190565b60006020825261174460208301846121c0565b600060808252855160206080840152805160a0840152602081015160c0840152604081015160e08401526060810151610100840152608081015160018060a01b0380821661012086015260a0830151915060e06101408601528082511661018086015250602081015160606101a08601526124ac6101e08601826121c0565b905060408201516101c086015260c083015161016086015284810360208601526124d68189611fc8565b6040860197909752505050506060015292915050565b90815260200190565b6040518181016001600160401b038111828210171561251057fe5b604052919050565b60006001600160401b0382111561252b57fe5b5060209081020190565b60005b83811015612550578181015183820152602001612538565b8381111561255f576000848401525b50505050565b6001600160a01b038116811461257a57600080fd5b5056fea2646970667358221220ec9d72acde04f906a36b148f6ca85d8cfba2b9ff6e82634a5a578c2a44f7221264736f6c63430007060033";
