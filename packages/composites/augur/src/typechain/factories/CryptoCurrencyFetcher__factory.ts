/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, Contract, ContractFactory, Overrides } from 'ethers'
import { Provider, TransactionRequest } from '@ethersproject/providers'

import type { CryptoCurrencyFetcher } from '../CryptoCurrencyFetcher'

export class CryptoCurrencyFetcher__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer)
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> },
  ): Promise<CryptoCurrencyFetcher> {
    return super.deploy(overrides || {}) as Promise<CryptoCurrencyFetcher>
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> },
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {})
  }
  attach(address: string): CryptoCurrencyFetcher {
    return super.attach(address) as CryptoCurrencyFetcher
  }
  connect(signer: Signer): CryptoCurrencyFetcher__factory {
    return super.connect(signer) as CryptoCurrencyFetcher__factory
  }
  static connect(address: string, signerOrProvider: Signer | Provider): CryptoCurrencyFetcher {
    return new Contract(address, _abi, signerOrProvider) as CryptoCurrencyFetcher
  }
}

const _abi = [
  {
    inputs: [],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_marketFactory',
        type: 'address',
      },
      {
        internalType: 'contract AMMFactory',
        name: '_ammFactory',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: '_offset',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: '_total',
        type: 'uint256',
      },
    ],
    name: 'fetchDynamic',
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: 'contract AbstractMarketFactoryV3',
                name: 'factory',
                type: 'address',
              },
              {
                internalType: 'uint256',
                name: 'marketId',
                type: 'uint256',
              },
              {
                components: [
                  {
                    internalType: 'address',
                    name: 'addr',
                    type: 'address',
                  },
                  {
                    internalType: 'uint256[]',
                    name: 'tokenRatios',
                    type: 'uint256[]',
                  },
                  {
                    internalType: 'uint256[]',
                    name: 'balances',
                    type: 'uint256[]',
                  },
                  {
                    internalType: 'uint256[]',
                    name: 'weights',
                    type: 'uint256[]',
                  },
                  {
                    internalType: 'uint256',
                    name: 'swapFee',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'totalSupply',
                    type: 'uint256',
                  },
                ],
                internalType: 'struct Fetcher.PoolBundle',
                name: 'pool',
                type: 'tuple',
              },
              {
                internalType: 'contract OwnedERC20',
                name: 'winner',
                type: 'address',
              },
            ],
            internalType: 'struct Fetcher.DynamicMarketBundle',
            name: 'super',
            type: 'tuple',
          },
          {
            internalType: 'uint256',
            name: 'resolutionValue',
            type: 'uint256',
          },
        ],
        internalType: 'struct CryptoCurrencyFetcher.SpecificDynamicMarketBundle[]',
        name: '_bundles',
        type: 'tuple[]',
      },
      {
        internalType: 'uint256',
        name: '_lowestMarketIndex',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: '_timestamp',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_marketFactory',
        type: 'address',
      },
      {
        internalType: 'contract AMMFactory',
        name: '_ammFactory',
        type: 'address',
      },
      {
        internalType: 'contract MasterChef',
        name: '_masterChef',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: '_offset',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: '_total',
        type: 'uint256',
      },
    ],
    name: 'fetchInitial',
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: 'uint256',
                name: 'shareFactor',
                type: 'uint256',
              },
              {
                internalType: 'uint256',
                name: 'stakerFee',
                type: 'uint256',
              },
              {
                internalType: 'uint256',
                name: 'settlementFee',
                type: 'uint256',
              },
              {
                internalType: 'uint256',
                name: 'protocolFee',
                type: 'uint256',
              },
              {
                internalType: 'contract FeePot',
                name: 'feePot',
                type: 'address',
              },
              {
                components: [
                  {
                    internalType: 'address',
                    name: 'addr',
                    type: 'address',
                  },
                  {
                    internalType: 'string',
                    name: 'symbol',
                    type: 'string',
                  },
                  {
                    internalType: 'uint256',
                    name: 'decimals',
                    type: 'uint256',
                  },
                ],
                internalType: 'struct Fetcher.CollateralBundle',
                name: 'collateral',
                type: 'tuple',
              },
              {
                internalType: 'uint256',
                name: 'marketCount',
                type: 'uint256',
              },
            ],
            internalType: 'struct Fetcher.MarketFactoryBundle',
            name: 'super',
            type: 'tuple',
          },
        ],
        internalType: 'struct CryptoCurrencyFetcher.SpecificMarketFactoryBundle',
        name: '_marketFactoryBundle',
        type: 'tuple',
      },
      {
        components: [
          {
            components: [
              {
                internalType: 'contract AbstractMarketFactoryV3',
                name: 'factory',
                type: 'address',
              },
              {
                internalType: 'uint256',
                name: 'marketId',
                type: 'uint256',
              },
              {
                components: [
                  {
                    internalType: 'address',
                    name: 'addr',
                    type: 'address',
                  },
                  {
                    internalType: 'uint256[]',
                    name: 'tokenRatios',
                    type: 'uint256[]',
                  },
                  {
                    internalType: 'uint256[]',
                    name: 'balances',
                    type: 'uint256[]',
                  },
                  {
                    internalType: 'uint256[]',
                    name: 'weights',
                    type: 'uint256[]',
                  },
                  {
                    internalType: 'uint256',
                    name: 'swapFee',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'totalSupply',
                    type: 'uint256',
                  },
                ],
                internalType: 'struct Fetcher.PoolBundle',
                name: 'pool',
                type: 'tuple',
              },
              {
                components: [
                  {
                    internalType: 'uint256',
                    name: 'beginTimestamp',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'endTimestamp',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'earlyDepositEndTimestamp',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'totalRewardsAccrued',
                    type: 'uint256',
                  },
                  {
                    internalType: 'bool',
                    name: 'created',
                    type: 'bool',
                  },
                ],
                internalType: 'struct MasterChef.PoolStatusInfo',
                name: 'rewards',
                type: 'tuple',
              },
              {
                internalType: 'contract OwnedERC20[]',
                name: 'shareTokens',
                type: 'address[]',
              },
              {
                internalType: 'uint256',
                name: 'creationTimestamp',
                type: 'uint256',
              },
              {
                internalType: 'contract OwnedERC20',
                name: 'winner',
                type: 'address',
              },
              {
                internalType: 'uint256[]',
                name: 'initialOdds',
                type: 'uint256[]',
              },
            ],
            internalType: 'struct Fetcher.StaticMarketBundle',
            name: 'super',
            type: 'tuple',
          },
          {
            internalType: 'uint256',
            name: 'coinIndex',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'creationValue',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'resolutionTime',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'resolutionValue',
            type: 'uint256',
          },
        ],
        internalType: 'struct CryptoCurrencyFetcher.SpecificStaticMarketBundle[]',
        name: '_marketBundles',
        type: 'tuple[]',
      },
      {
        internalType: 'uint256',
        name: '_lowestMarketIndex',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: '_timestamp',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'marketType',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'version',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
]

const _bytecode =
  '0x60806040523480156200001157600080fd5b50604080518082018252600e81526d43727970746f43757272656e637960901b60208083019182528351808501909452600384526215109160ea1b908401528151919291620000639160009162000082565b5080516200007990600190602084019062000082565b5050506200012e565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282620000ba576000855562000105565b82601f10620000d557805160ff191683800117855562000105565b8280016001018555821562000105579182015b8281111562000105578251825591602001919060010190620000e8565b506200011392915062000117565b5090565b5b8082111562000113576000815560010162000118565b611c9b806200013e6000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806322254b88146100515780632dd489091461007d57806354fd4d501461009257806356d274911461009a575b600080fd5b61006461005f366004611402565b6100bc565b6040516100749493929190611b13565b60405180910390f35b610085610197565b6040516100749190611b00565b610085610225565b6100ad6100a836600461145c565b61027f565b60405161007493929190611a0e565b6100c4611149565b60606000806100d289610344565b935060606100e18a888861035c565b81519750935090508567ffffffffffffffff8111801561010057600080fd5b5060405190808252806020026020018201604052801561013a57816020015b610127611161565b81526020019060019003908161011f5790505b50935060005b86811015610186576101678b8b8b85858151811061015a57fe5b60200260200101516104b7565b85828151811061017357fe5b6020908102919091010152600101610140565b504291505095509550955095915050565b6000805460408051602060026001851615610100026000190190941693909304601f8101849004840282018401909252818152929183018282801561021d5780601f106101f25761010080835404028352916020019161021d565b820191906000526020600020905b81548152906001019060200180831161020057829003601f168201915b505050505081565b60018054604080516020600284861615610100026000190190941693909304601f8101849004840282018401909252818152929183018282801561021d5780601f106101f25761010080835404028352916020019161021d565b6060600080606061029188878761035c565b81519650935090508467ffffffffffffffff811180156102b057600080fd5b506040519080825280602002602001820160405280156102ea57816020015b6102d7611196565b8152602001906001900390816102cf5790505b50935060005b8581101561033557610316898984848151811061030957fe5b6020026020010151610580565b85828151811061032257fe5b60209081029190910101526001016102f0565b50429150509450945094915050565b61034c611149565b61035582610626565b8152919050565b606060008267ffffffffffffffff8111801561037757600080fd5b506040519080825280602002602001820160405280156103a1578160200160208202803683370190505b50915060006001866001600160a01b031663ec9790826040518163ffffffff1660e01b815260040160206040518083038186803b1580156103e157600080fd5b505afa1580156103f5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104199190611758565b0390508015806104295750808510155b156104475750506040805160008082526020820190925291506104af565b600085820392505b61045987846109a0565b1561047a578284828151811061046b57fe5b60209081029190910101526001015b848110610486576104a0565b8260011415610494576104a0565b6000199092019161044f565b808511156104ac578084525b50505b935093915050565b6104bf611161565b60405163b06c1ba360e01b81526000906001600160a01b0387169063b06c1ba3906104ee908690600401611bd2565b60806040518083038186803b15801561050657600080fd5b505afa15801561051a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061053e9190611582565b905061054c86868686610ac4565b8252602080820151604080850191909152825191840191909152810151608083015260609081015190820152949350505050565b610588611196565b60405163b06c1ba360e01b81526000906001600160a01b0386169063b06c1ba3906105b7908690600401611bd2565b60806040518083038186803b1580156105cf57600080fd5b505afa1580156105e3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106079190611582565b9050610614858585610c36565b82526040015160208201529392505050565b61062e6111b6565b816001600160a01b0316637641ab016040518163ffffffff1660e01b815260040160206040518083038186803b15801561066757600080fd5b505afa15801561067b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061069f9190611758565b816000018181525050816001600160a01b0316634b2d9ffc6040518163ffffffff1660e01b815260040160206040518083038186803b1580156106e157600080fd5b505afa1580156106f5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107199190611758565b816020018181525050816001600160a01b0316637d1d7fb86040518163ffffffff1660e01b815260040160206040518083038186803b15801561075b57600080fd5b505afa15801561076f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107939190611758565b816040018181525050816001600160a01b031663b0e21e8a6040518163ffffffff1660e01b815260040160206040518083038186803b1580156107d557600080fd5b505afa1580156107e9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061080d9190611758565b816060018181525050816001600160a01b0316634c9f66c76040518163ffffffff1660e01b815260040160206040518083038186803b15801561084f57600080fd5b505afa158015610863573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061088791906114dc565b81608001906001600160a01b031690816001600160a01b03168152505061091d826001600160a01b031663d8dfeb456040518163ffffffff1660e01b815260040160206040518083038186803b1580156108e057600080fd5b505afa1580156108f4573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061091891906114dc565b610cfa565b8160a00181905250816001600160a01b031663ec9790826040518163ffffffff1660e01b815260040160206040518083038186803b15801561095e57600080fd5b505afa158015610972573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109969190611758565b60c0820152919050565b600080836001600160a01b031663eb44fdd3846040518263ffffffff1660e01b81526004016109cf9190611bd2565b60006040518083038186803b1580156109e757600080fd5b505afa1580156109fb573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610a2391908101906115e1565b60408101519091506001600160a01b0316610a42576001915050610abe565b600081604001516001600160a01b03166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b158015610a8157600080fd5b505afa158015610a95573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ab99190611758565b119150505b92915050565b610acc6111f5565b60405163eb44fdd360e01b81526000906001600160a01b0387169063eb44fdd390610afb908690600401611bd2565b60006040518083038186803b158015610b1357600080fd5b505afa158015610b27573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610b4f91908101906115e1565b6001600160a01b0387168352602083018490529050610b6f868685610e07565b604080840191909152516327def0cb60e21b81526001600160a01b03851690639f7bc32c90610ba69088908a908890600401611ac3565b60a06040518083038186803b158015610bbe57600080fd5b505afa158015610bd2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bf691906116eb565b60608301526020810151608083015260e08082015160a084015260408201516001600160a01b031660c08401526101209091015190820152949350505050565b610c3e61124d565b60405163eb44fdd360e01b81526000906001600160a01b0386169063eb44fdd390610c6d908690600401611bd2565b60006040518083038186803b158015610c8557600080fd5b505afa158015610c99573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610cc191908101906115e1565b6001600160a01b0380871684526020840185905260408201511660608401529050610ced858585610e07565b6040830152509392505050565b610d02611279565b6001600160a01b038216808252604080516395d89b4160e01b815290516395d89b4191600480820192600092909190829003018186803b158015610d4557600080fd5b505afa158015610d59573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610d8191908101906114f8565b8160200181905250816001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b158015610dc257600080fd5b505afa158015610dd6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dfa9190611770565b60ff166040820152919050565b610e0f6112a3565b604051632dadcf5160e11b81526000906001600160a01b03851690635b5b9ea290610e409088908790600401611ae7565b60206040518083038186803b158015610e5857600080fd5b505afa158015610e6c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e9091906114dc565b90506001600160a01b038116610ea65750611142565b6001600160a01b038116808352604080516318160ddd60e01b815290516318160ddd91600480820192602092909190829003018186803b158015610ee957600080fd5b505afa158015610efd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f219190611758565b60a083015260405163fa0de35960e01b81526001600160a01b0385169063fa0de35990610f549088908790600401611ae7565b60206040518083038186803b158015610f6c57600080fd5b505afa158015610f80573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fa49190611758565b608083015260405163d2364bf360e01b81526001600160a01b0385169063d2364bf390610fd79088908790600401611ae7565b60006040518083038186803b158015610fef57600080fd5b505afa158015611003573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261102b91908101906114a1565b6040808401919091525163c7b4b6dd60e01b81526001600160a01b0385169063c7b4b6dd906110609088908790600401611ae7565b60006040518083038186803b15801561107857600080fd5b505afa15801561108c573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526110b491908101906114a1565b602083015260405163d055da7160e01b81526001600160a01b0385169063d055da71906110e79088908790600401611ae7565b60006040518083038186803b1580156110ff57600080fd5b505afa158015611113573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261113b91908101906114a1565b6060830152505b9392505050565b604051806020016040528061115c6111b6565b905290565b6040518060a001604052806111746111f5565b8152602001600081526020016000815260200160008152602001600081525090565b60405180604001604052806111a961124d565b8152602001600081525090565b6040518060e001604052806000815260200160008152602001600081526020016000815260200160006001600160a01b031681526020016111a9611279565b6040805161010081018252600080825260208201529081016112156112a3565b81526020016112226112e2565b8152602001606081526020016000815260200160006001600160a01b03168152602001606081525090565b604080516080810182526000808252602082015290810161126c6112a3565b8152600060209091015290565b604051806060016040528060006001600160a01b0316815260200160608152602001600081525090565b6040518060c0016040528060006001600160a01b0316815260200160608152602001606081526020016060815260200160008152602001600081525090565b6040518060a00160405280600081526020016000815260200160008152602001600081526020016000151581525090565b805161131e81611c4d565b919050565b600082601f830112611333578081fd5b8151602061134861134383611bff565b611bdb565b8281528181019085830183850287018401881015611364578586fd5b855b8581101561138b57815161137981611c4d565b84529284019290840190600101611366565b5090979650505050505050565b600082601f8301126113a8578081fd5b815160206113b861134383611bff565b82815281810190858301838502870184018810156113d4578586fd5b855b8581101561138b578151845292840192908401906001016113d6565b8051801515811461131e57600080fd5b600080600080600060a08688031215611419578081fd5b853561142481611c4d565b9450602086013561143481611c4d565b9350604086013561144481611c4d565b94979396509394606081013594506080013592915050565b60008060008060808587031215611471578081fd5b843561147c81611c4d565b9350602085013561148c81611c4d565b93969395505050506040820135916060013590565b6000602082840312156114b2578081fd5b815167ffffffffffffffff8111156114c8578182fd5b6114d484828501611398565b949350505050565b6000602082840312156114ed578081fd5b815161114281611c4d565b600060208284031215611509578081fd5b815167ffffffffffffffff80821115611520578283fd5b818401915084601f830112611533578283fd5b81518181111561153f57fe5b611552601f8201601f1916602001611bdb565b9150808252856020828501011115611568578384fd5b611579816020840160208601611c1d565b50949350505050565b600060808284031215611593578081fd5b6040516080810181811067ffffffffffffffff821117156115b057fe5b8060405250825181526020830151602082015260408301516040820152606083015160608201528091505092915050565b6000602082840312156115f2578081fd5b815167ffffffffffffffff80821115611609578283fd5b818401915061016080838703121561161f578384fd5b61162881611bdb565b905061163383611313565b8152602083015182811115611646578485fd5b61165287828601611323565b60208301525061166460408401611313565b6040820152606083015160608201526080830151608082015260a083015160a082015260c083015160c082015260e083015160e082015261010080840151818301525061012080840151838111156116ba578586fd5b6116c688828701611398565b82840152505061014091506116dc8284016113f2565b91810191909152949350505050565b600060a082840312156116fc578081fd5b60405160a0810181811067ffffffffffffffff8211171561171957fe5b80604052508251815260208301516020820152604083015160408201526060830151606082015261174c608084016113f2565b60808201529392505050565b600060208284031215611769578081fd5b5051919050565b600060208284031215611781578081fd5b815160ff81168114611142578182fd5b6000815180845260208085019450808401835b838110156117c95781516001600160a01b0316875295820195908201906001016117a4565b509495945050505050565b6000815180845260208085018081965082840281019150828601855b858110156118ec578284038952815160a081518187526118138288018251611928565b878101518060c08901525060408082015160e0610180818b015261183b6102208b0183611961565b91506060808501516118516101008d01826119dc565b50608080860151609f19808e8703016101a08f01526118708683611791565b988801516101c08f015260c08801519895506118906101e08f018a611928565b848801519850808e8703016102008f015250506118ad84886118f9565b888e01518d8f015285890151958d019590955281880151918c01919091529586015195909901949094529b88019b9650505091850191506001016117f0565b5091979650505050505050565b6000815180845260208085019450808401835b838110156117c95781518752958201959082019060010161190c565b6001600160a01b03169052565b6000815180845261194d816020860160208601611c1d565b601f01601f19169290920160200192915050565b600060018060a01b038251168352602082015160c0602085015261198860c08501826118f9565b9050604083015184820360408601526119a182826118f9565b915050606083015184820360608601526119bb82826118f9565b9150506080830151608085015260a083015160a08501528091505092915050565b805182526020810151602083015260408101516040830152606081015160608301526080810151151560808301525050565b606080825284518282018190526000919060809081850190602080820287018401818b01875b84811015611aa757898303607f1901865281518051604080865281516001600160a01b0390811682880152878301518c880152908201518a87018b90529190611a8060c0880184611961565b918c01511660a0870152918601519486019490945295840195925090830190600101611a34565b5050908701989098525050505060409091019190915250919050565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b03929092168252602082015260400190565b6000602082526111426020830184611935565b600060808252855160206080840152805160a0840152602081015160c0840152604081015160e08401526060810151610100840152608081015160018060a01b0380821661012086015260a0830151915060e06101408601528082511661018086015250602081015160606101a0860152611b926101e0860182611935565b905060408201516101c086015260c08301516101608601528481036020860152611bbc81896117d4565b6040860197909752505050506060015292915050565b90815260200190565b60405181810167ffffffffffffffff81118282101715611bf757fe5b604052919050565b600067ffffffffffffffff821115611c1357fe5b5060209081020190565b60005b83811015611c38578181015183820152602001611c20565b83811115611c47576000848401525b50505050565b6001600160a01b0381168114611c6257600080fd5b5056fea26469706673582212203d54d370b2e9b60e881c2320cf1d1eb1e6e1586581b1e0a78762c3e5ea20e74064736f6c63430007060033'
